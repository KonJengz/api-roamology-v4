generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/prisma"
  binaryTargets = ["native", "rhel-openssl-3.0.x", "linux-openssl-3.0.x"] // เพิ่ม target สำหรับ Vercel
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(uuid(7)) @db.VarChar(36)
  email        String  @unique @db.VarChar(255)
  username     String  @db.VarChar(50)
  imgUrl       String? @map("img_url") @db.Text
  filePath     String? @map("file_path") @db.Text
  password     String  @db.VarChar(255)
  refreshToken String? @map("refresh_token") @db.Text

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAd DateTime @updatedAt @map("updated_at") @db.Timestamp(0)

  posts   Post[]
  aboutMe AboutMe[]
}

model AboutMe {
  id       String  @id @default(uuid(7)) @db.VarChar(36)
  year     Int     @db.SmallInt
  month    Int     @db.TinyInt
  isDelete Boolean @default(false) @map("is_delete")

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAd DateTime @updatedAt @map("updated_at") @db.Timestamp(0)

  user   User?   @relation(fields: [userId], references: [id])
  userId String? @map("user_id") @db.VarChar(36)

  topicAboutMe TopicAboutMe[]

  @@map("about_me")
}

model TopicAboutMe {
  id        String  @id @default(uuid(7)) @db.VarChar(36)
  nameTopic String  @map("name_topic") @db.VarChar(255)
  detail    String  @db.MediumText
  isDelete  Boolean @default(false) @map("is_delete")

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAd DateTime @updatedAt @map("updated_at") @db.Timestamp(0)
  aboutMe   AboutMe? @relation(fields: [aboutMeId], references: [id])
  aboutMeId String?  @map("about_me_id") @db.VarChar(36)

  imgTopicAboutMe ImgTopicAboutMe[]

  @@map("topic_about_me")
}

model ImgTopicAboutMe {
  id       String  @id @default(uuid(7)) @db.VarChar(36)
  imgUrl   String  @map("img_url") @db.Text
  filePath String? @map("file_path") @db.Text

  isDelete Boolean @default(false) @map("is_delete")

  createdAt      DateTime      @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAd      DateTime      @updatedAt @map("updated_at") @db.Timestamp(0)
  topicAboutMe   TopicAboutMe? @relation(fields: [topicAboutMeId], references: [id])
  topicAboutMeId String?       @map("topic_about_me_id") @db.VarChar(36)

  @@map("img_topic_about_me")
}

model Post {
  id          String    @id @default(uuid(7)) @db.VarChar(36)
  countryName String    @map("country_name") @db.VarChar(255)
  placeName   String    @map("place_name") @db.VarChar(255)
  zone        String?   @db.VarChar(255)
  date        DateTime? @db.Date
  isDelete    Boolean   @default(false) @map("is_delete")

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAd DateTime @updatedAt @map("updated_at") @db.Timestamp(0)
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  @map("user_id") @db.VarChar(36)

  imgPost   ImgPost[]
  topicPost TopicPost[]
}

model ImgPost {
  id       String  @id @default(uuid(7)) @db.VarChar(36)
  imgUrl   String  @map("img_url") @db.Text
  filePath String? @map("file_path") @db.Text

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAd DateTime @updatedAt @map("updated_at") @db.Timestamp(0)
  post      Post?    @relation(fields: [postId], references: [id])
  postId    String?  @map("post_id") @db.VarChar(36)

  @@map("img_post")
}

model TopicPost {
  id        String  @id @default(uuid(7)) @db.VarChar(36)
  nameTopic String  @map("name_topic") @db.VarChar(255)
  detail    String  @db.MediumText
  isDelete  Boolean @default(false) @map("is_delete")

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAd DateTime @updatedAt @map("updated_at") @db.Timestamp(0)
  post      Post?    @relation(fields: [postId], references: [id])
  postId    String?  @map("post_id") @db.VarChar(36)

  imgTopicPost ImgTopicPost[]

  @@map("topic_post")
}

model ImgTopicPost {
  id       String  @id @default(uuid(7)) @db.VarChar(36)
  imgUrl   String  @map("img_url") @db.Text
  filePath String? @map("file_path") @db.Text

  createdAt   DateTime   @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAd   DateTime   @updatedAt @map("updated_at") @db.Timestamp(0)
  topicPost   TopicPost? @relation(fields: [topicPostId], references: [id])
  topicPostId String?    @map("topic_post_id") @db.VarChar(36)

  @@map("img_topic_post")
}
